#!/bin/bash
#
# update_mr - Update GitLab MR description and/or title
#
# Usage: update_mr '<summary of changes>' ['<optional title>']
#
# Updates the description and optionally the title of an open MR for current branch.
# Requires glab CLI and existing MR for current branch.
#
# Exit: 0=success, 1=error
#
update_mr() {
    local summary="$1"
    local title="$2"
    
    # Validate required summary parameter
    if [[ -z "$summary" ]]; then
        echo "‚ùå Usage: update_mr '<summary of changes>' ['<optional title>']"
        echo "üí° Tip: Run getDiff first, then call this with Claude's summary"
        return 1
    fi
    
    # Validate git repository
    if ! git rev-parse --show-toplevel >/dev/null 2>&1; then
        echo "‚ùå Not in a git repository"
        return 1
    fi
    
    local current_branch=$(git branch --show-current)
    echo "üîç Looking for MR for branch: $current_branch"
    
    # Find MR for current branch using JSON output for reliable parsing
    local mr_output=$(glab mr list --source-branch="$current_branch" --json 2>/dev/null)
    
    if [[ -z "$mr_output" ]] || [[ "$mr_output" == "[]" ]]; then
        echo "‚ùå No open MR found for branch '$current_branch'"
        echo "üí° Create MR first: glab mr create"
        return 1
    fi
    
    # Extract MR ID from JSON
    local mr_id=$(echo "$mr_output" | jq -r '.[0].iid // empty' 2>/dev/null)
    
    if [[ -z "$mr_id" ]]; then
        echo "‚ùå Could not extract MR ID from glab output"
        echo "üêõ Debug output:"
        echo "$mr_output"
        return 1
    fi
    
    echo "üìù Found MR !$mr_id"
    
    # Build update command
    local update_cmd="glab mr update \"$mr_id\" --description \"$summary\""
    
    # Add title if provided
    if [[ -n "$title" ]]; then
        update_cmd="$update_cmd --title \"$title\""
        echo "üîÑ Updating description and title..."
    else
        echo "üîÑ Updating description..."
    fi
    
    # Update MR
    if eval "$update_cmd" 2>/dev/null; then
        echo "‚úÖ Successfully updated MR !$mr_id"
        [[ -n "$title" ]] && echo "   Title: $title"
        echo "üîó View: glab mr view $mr_id --web"
    else
        echo "‚ùå Failed to update MR"
        return 1
    fi
}

# Execute if run as script (not sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    update_mr "$@"
fi
